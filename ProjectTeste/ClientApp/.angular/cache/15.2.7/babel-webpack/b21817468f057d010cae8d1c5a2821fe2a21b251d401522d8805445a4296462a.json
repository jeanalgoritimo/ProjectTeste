{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CalcDataComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CalcDataComponent_table_19_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r4.ValorBruto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r4.ValorBruto);\n  }\n}\nfunction CalcDataComponent_table_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Valor Bruto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Valor Liquido\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, CalcDataComponent_table_19_tr_8_Template, 5, 2, \"tr\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.forecasts);\n  }\n}\nexport class CalcDataComponent {\n  constructor(http) {\n    this.http = http;\n    this.value = {};\n    this.forecasts = [];\n    this.getValues();\n  }\n  ngOnInit() {}\n  getValues() {\n    var baseUrlExterna = \"https://localhost:44365/\";\n    this.http.get(baseUrlExterna + 'api/Calculo').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n  //public forecasts: Calculo[] = [];\n  //constructor(private http: HttpClient) {\n  //  const url = 'https://localhost:44365/api/Calculo';\n  //  this.http.get<any[]>(url).subscribe(result => {\n  //  console.warn(result);\n  //  });\n  //}\n  //onKey(event: any) { // without type info\n  //  this.txtcalulo += event.target.value;\n  //this.forecasts = \n  //}\n  onSubmit(formValue) {\n    console.warn(formValue);\n    const url = 'https://localhost:44365/api/Calculo';\n    return this.http.post(url, formValue);\n    //this.http.post('https://localhost:44365/api/Calculo', formValue)\n    //  .subscribe((result) => { console.warn(\"result\", result)})\n  }\n}\n\nCalcDataComponent.ɵfac = function CalcDataComponent_Factory(t) {\n  return new (t || CalcDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nCalcDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalcDataComponent,\n  selectors: [[\"app-calc-data\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [3, \"ngSubmit\"], [\"userPost\", \"ngForm\"], [\"type\", \"text\", \"name\", \"name\", \"ngModel\", \"\", \"placeholder\", \"name\"], [\"type\", \"text\", \"name\", \"adress\", \"ngModel\", \"\", \"placeholder\", \"adress\"], [\"type\", \"text\", \"name\", \"email\", \"ngModel\", \"\", \"placeholder\", \"email\"], [\"type\", \"text\", \"name\", \"rating\", \"ngModel\", \"\", \"placeholder\", \"rating\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CalcDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Teste de C\\u00E1culo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CalcDataComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"br\")(7, \"input\", 4)(8, \"br\")(9, \"br\")(10, \"input\", 5)(11, \"br\")(12, \"br\")(13, \"input\", 6)(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"button\", 7);\n      i0.ɵɵtext(17, \"Submit Data\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, CalcDataComponent_p_18_Template, 3, 0, \"p\", 8);\n      i0.ɵɵtemplate(19, CalcDataComponent_table_19_Template, 9, 1, \"table\", 9);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", !ctx.forecasts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAWAA,yBAAsB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAWrCA,0BAAuC;IACjCA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;;;;IAD9BA,eAAyB;IAAzBA,4CAAyB;IACzBA,eAAyB;IAAzBA,4CAAyB;;;;;IAXnCA,iCAAkF;IAGxEA,2BAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,6BAAa;IAAAA,iBAAK;IAI1BA,6BAAO;IACLA,0EAGK;IACPA,iBAAQ;;;;IAJmBA,eAAY;IAAZA,0CAAY;;;ACdzC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,UAAK,GAAG,EAAE;IACH,cAAS,GAAc,EAAE;IAE9B,IAAI,CAACC,SAAS,EAAE;EAClB;EAGAC,QAAQ,IACR;EAEAD,SAAS;IACP,IAAIE,cAAc,GAAG,0BAA0B;IAC/C,IAAI,CAACH,IAAI,CAACI,GAAG,CAAYD,cAAc,GAAG,aAAa,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAEnC;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACAE,QAAQ,CAACC,SAAc;IACrBF,OAAO,CAACG,IAAI,CAACD,SAAS,CAAC;IACvB,MAAME,GAAG,GAAG,qCAAqC;IACjD,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAMD,GAAG,EAAEF,SAAS,CAAC;IAC1C;IACA;EAEF;;;AAtCWb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDR9BtB,6BAAoB;MAAAA,oCAAe;MAAAA,iBAAK;MAGxCA,kCAA+D;MAAtCA;QAAAA;QAAA;QAAA,OAAYA,sCAAwB;MAAA,EAAC;MAC5DA,2BAA4D;MAI5DA,kCAAsB;MAAAA,4BAAW;MAAAA,iBAAS;MAG5CA,gEAA6C;MAE7CA,wEAcQ;;;MAhBJA,gBAAgB;MAAhBA,qCAAgB;MAE6CA,eAAe;MAAfA,oCAAe","names":["i0","CalcDataComponent","constructor","http","getValues","ngOnInit","baseUrlExterna","get","subscribe","result","forecasts","error","console","onSubmit","formValue","warn","url","post","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Jean\\source\\repos\\ProjectTeste\\ProjectTeste\\ClientApp\\src\\app\\Calc\\calc-data.component.html","C:\\Users\\Jean\\source\\repos\\ProjectTeste\\ProjectTeste\\ClientApp\\src\\app\\Calc\\cal-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Teste de Cáculo</h1>\r\n\r\n\r\n<form #userPost=\"ngForm\" (ngSubmit)=\"onSubmit(userPost.value)\">\r\n  <input type=\"text\" name=\"name\" ngModel placeholder=\"name\" /><br /><br />\r\n  <input type=\"text\" name=\"adress\" ngModel placeholder=\"adress\" /><br /><br />\r\n  <input type=\"text\" name=\"email\" ngModel placeholder=\"email\" /><br /><br />\r\n  <input type=\"text\" name=\"rating\" ngModel placeholder=\"rating\" /><br /><br />\r\n  <button type=\"submit\">Submit Data</button>\r\n</form>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Valor Bruto</th>\r\n      <th>Valor Liquido</th>\r\n    \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.ValorBruto }}</td>\r\n      <td>{{ forecast.ValorBruto }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-calc-data',\r\n  templateUrl: './calc-data.component.html'\r\n})\r\nexport class CalcDataComponent {\r\n  value = {};\r\n  public forecasts: Calculo[] = [];\r\n  constructor(private http: HttpClient) {\r\n    this.getValues();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getValues() {\r\n    var baseUrlExterna = \"https://localhost:44365/\";\r\n    this.http.get<Calculo[]>(baseUrlExterna + 'api/Calculo').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  \r\n  }\r\n  //public forecasts: Calculo[] = [];\r\n\r\n  //constructor(private http: HttpClient) {\r\n  //  const url = 'https://localhost:44365/api/Calculo';\r\n  //  this.http.get<any[]>(url).subscribe(result => {\r\n  //  console.warn(result);\r\n  //  });\r\n  //}\r\n\r\n  //onKey(event: any) { // without type info\r\n  //  this.txtcalulo += event.target.value;\r\n  //this.forecasts = \r\n  //}\r\n  onSubmit(formValue: any): Observable<any> {\r\n    console.warn(formValue);\r\n    const url = 'https://localhost:44365/api/Calculo';\r\n    return this.http.post<any>(url, formValue);\r\n    //this.http.post('https://localhost:44365/api/Calculo', formValue)\r\n    //  .subscribe((result) => { console.warn(\"result\", result)})\r\n\r\n  }\r\n\r\n  //onSubmit(formValue: any): void {\r\n  //  var baseUrlExterna = \"https://localhost:44365/\";\r\n  //  this.http.post(baseUrlExterna + 'api/WeatherForecast').subscribe(result => {\r\n  //  }, error => console.error(error));\r\n  //  //const headers = { 'content-type': 'application/json' }\r\n  //  //const body = JSON.stringify(formValue);\r\n  //  //console.log(body)\r\n  //  //return this.http.post('https://localhost:44365/' + 'api/values', body, { 'headers': headers })\r\n  //}\r\n\r\n\r\n}\r\n\r\n//interface WeatherForecast {\r\n//  date: string;\r\n//  temperatureC: number;\r\n//  temperatureF: number;\r\n//  summary: string;\r\n//}\r\n\r\n\r\ninterface Calculo {\r\n  ValorBruto: string;\r\n  ValorLiquido: string;\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}