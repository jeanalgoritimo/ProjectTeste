{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/CalculoService\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CalcDataComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CalcDataComponent_table_13_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const calculos_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(calculos_r4.ValorBruto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(calculos_r4.ValorLiquido);\n  }\n}\nfunction CalcDataComponent_table_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Valor Bruto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Valor Liquido\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, CalcDataComponent_table_13_tr_8_Template, 5, 2, \"tr\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.calculo);\n  }\n}\nexport class CalcDataComponent {\n  constructor(calculoService) {\n    this.calculoService = calculoService;\n    this.calculo = [];\n  }\n  onSubmit(formValue) {\n    this.PodeSalvar = true;\n    console.log(formValue.ValorInicial);\n    console.log(formValue.Prazo);\n    if (formValue.ValorInicial < 0 || formValue.ValorInicial === \"\" && formValue.ValorInicial === null) {\n      this.PodeSalvar = false;\n      alert('Atenção Valor Inicial não pode ser negativo');\n    }\n    if (formValue.Prazo < 0 || formValue.Prazo === \"\" && formValue.Prazo === null) {\n      this.PodeSalvar = false;\n      alert('Atenção Prazo não pode ser negativo');\n    }\n    if (this.PodeSalvar == true) {\n      this.calculoService.salvar(formValue).subscribe(res => {\n        this.calculo = res;\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n}\nCalcDataComponent.ɵfac = function CalcDataComponent_Factory(t) {\n  return new (t || CalcDataComponent)(i0.ɵɵdirectiveInject(i1.CalculoService));\n};\nCalcDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalcDataComponent,\n  selectors: [[\"app-calc-data\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [3, \"ngSubmit\"], [\"userPost\", \"ngForm\"], [\"type\", \"number\", \"name\", \"ValorInicial\", \"ngModel\", \"\", \"placeholder\", \"Valor Inicial\", \"min\", \"1\"], [\"type\", \"number\", \"name\", \"Prazo\", \"ngModel\", \"\", \"placeholder\", \"Prazo\", \"min\", \"1\", \"no-float\", \"\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function CalcDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"C\\u00E1culo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CalcDataComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"br\")(7, \"input\", 4)(8, \"br\")(9, \"br\");\n      i0.ɵɵelementStart(10, \"button\", 5);\n      i0.ɵɵtext(11, \"Calcular\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, CalcDataComponent_p_12_Template, 3, 0, \"p\", 6);\n      i0.ɵɵtemplate(13, CalcDataComponent_table_13_Template, 9, 1, \"table\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", !ctx.calculo);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.calculo);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MinValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAUAA,yBAAoB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAWnCA,0BAAqC;IAC/BA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;;;;IADhCA,eAAyB;IAAzBA,4CAAyB;IACzBA,eAA2B;IAA3BA,8CAA2B;;;;;IAXrCA,gCAAgF;IAGtEA,2BAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,6BAAa;IAAAA,iBAAK;IAI1BA,6BAAO;IACLA,yEAGK;IACPA,iBAAQ;;;;IAJmBA,eAAU;IAAVA,wCAAU;;;ACXvC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAF3B,YAAO,GAAc,EAAE;EAEwB;EAEtDC,QAAQ,CAACC,SAAc;IACrB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtBC,OAAO,CAACC,GAAG,CAACH,SAAS,CAACI,YAAY,CAAC;IACnCF,OAAO,CAACC,GAAG,CAACH,SAAS,CAACK,KAAK,CAAC;IAC5B,IAAIL,SAAS,CAACI,YAAY,GAAG,CAAC,IAAKJ,SAAS,CAACI,YAAY,KAAK,EAAE,IAAIJ,SAAS,CAACI,YAAY,KAAG,IAAK,EAAE;MAClG,IAAI,CAACH,UAAU,GAAG,KAAK;MACvBK,KAAK,CAAC,6CAA6C,CAAC;;IAEtD,IAAIN,SAAS,CAACK,KAAK,GAAG,CAAC,IAAKL,SAAS,CAACK,KAAK,KAAK,EAAE,IAAIL,SAAS,CAACK,KAAK,KAAK,IAAK,EAAE;MAC/E,IAAI,CAACJ,UAAU,GAAG,KAAK;MACvBK,KAAK,CAAC,qCAAqC,CAAC;;IAG9C,IAAI,IAAI,CAACL,UAAU,IAAI,IAAI,EAAE;MAC3B,IAAI,CAACH,cAAc,CAACS,MAAM,CAACP,SAAS,CAAC,CAACQ,SAAS,CAC7CC,GAAG,IAAG;QACJ,IAAI,CAACC,OAAO,GAAGD,GAAG;MACpB,CAAC,EACDE,KAAK,IAAG;QACNT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB,CAAC,CACF;;EAGL;;AA7BWf,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDV9BrB,6BAAoB;MAAAA,2BAAM;MAAAA,iBAAK;MAG/BA,kCAA+D;MAAtCA;QAAAA;QAAA;QAAA,OAAYA,sCAAwB;MAAA,EAAC;MAC5DA,2BAAsF;MAGtFA,kCAAsB;MAAAA,yBAAQ;MAAAA,iBAAS;MAGzCA,gEAA2C;MAE3CA,wEAcQ;;;MAhBJA,gBAAc;MAAdA,mCAAc;MAE+CA,eAAa;MAAbA,kCAAa","names":["i0","CalcDataComponent","constructor","calculoService","onSubmit","formValue","PodeSalvar","console","log","ValorInicial","Prazo","alert","salvar","subscribe","res","calculo","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Jean\\source\\repos\\ProjectTeste\\ProjectTeste\\ClientApp\\src\\app\\Calc\\calc-data.component.html","C:\\Users\\Jean\\source\\repos\\ProjectTeste\\ProjectTeste\\ClientApp\\src\\app\\Calc\\cal-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Cáculo</h1>\r\n\r\n\r\n<form #userPost=\"ngForm\" (ngSubmit)=\"onSubmit(userPost.value)\">\r\n  <input type=\"number\" name=\"ValorInicial\" ngModel placeholder=\"Valor Inicial\" min=\"1\"/><br /><br />\r\n  <input type=\"number\" name=\"Prazo\" ngModel placeholder=\"Prazo\" min=\"1\" no-float/><br /><br />\r\n\r\n  <button type=\"submit\">Calcular</button>\r\n</form>\r\n\r\n<p *ngIf=\"!calculo\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"calculo\">\r\n  <thead>\r\n    <tr>\r\n      <th>Valor Bruto</th>\r\n      <th>Valor Liquido</th>\r\n    \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let calculos of calculo\">\r\n      <td>{{ calculos.ValorBruto }}</td>\r\n      <td>{{ calculos.ValorLiquido }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\nimport { Calculo } from '../../Models/Calculo';\r\nimport { CalculoService } from '../../Services/CalculoService';\r\n\r\n@Component({\r\n  selector: 'app-calc-data',\r\n  templateUrl: './calc-data.component.html'\r\n})\r\nexport class CalcDataComponent {\r\n  public calculo: Calculo[] = [];\r\n  private PodeSalvar: boolean | undefined;\r\n  constructor(private calculoService: CalculoService) { }\r\n\r\n  onSubmit(formValue: any): void {\r\n    this.PodeSalvar = true;\r\n    console.log(formValue.ValorInicial);\r\n    console.log(formValue.Prazo);\r\n    if (formValue.ValorInicial < 0 || (formValue.ValorInicial === \"\" && formValue.ValorInicial===null)) {\r\n      this.PodeSalvar = false;\r\n      alert('Atenção Valor Inicial não pode ser negativo')\r\n    }\r\n    if (formValue.Prazo < 0 || (formValue.Prazo === \"\" && formValue.Prazo === null)) {\r\n      this.PodeSalvar = false;\r\n      alert('Atenção Prazo não pode ser negativo')\r\n    }\r\n\r\n    if (this.PodeSalvar == true) {\r\n      this.calculoService.salvar(formValue).subscribe(\r\n        res => {\r\n          this.calculo = res;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}