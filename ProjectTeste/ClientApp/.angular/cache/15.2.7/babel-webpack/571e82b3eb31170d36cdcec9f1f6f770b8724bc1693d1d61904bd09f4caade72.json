{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet CalcDataComponent = class CalcDataComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    var baseUrlExterna = \"https://localhost:44365/\";\n    http.get(baseUrlExterna + 'api/WeatherForecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n};\nCalcDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n}), __param(1, Inject('BASE_URL'))], CalcDataComponent);\nexport { CalcDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAO1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAsB,EAAE;IAGtC,IAAIC,cAAc,GAAG,0BAA0B;IAC/CF,IAAI,CAACG,GAAG,CAAoBD,cAAc,GAAG,qBAAqB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACrF,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CACD;AATYT,iBAAiB,eAJ7BF,SAAS,CAAC;EACTa,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,EAI+BC,iBAAM,CAAC,UAAU,CAAC,IAHtCb,iBAAiB,CAS7B;SATYA,iBAAiB","names":["Component","Inject","CalcDataComponent","constructor","http","baseUrl","baseUrlExterna","get","subscribe","result","forecasts","error","console","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\Jean\\source\\repos\\ProjectTeste\\ProjectTeste\\ClientApp\\src\\app\\Calc\\cal-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class CalcDataComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n \r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    var baseUrlExterna = \"https://localhost:44365/\";\r\n    http.get<WeatherForecast[]>(baseUrlExterna + 'api/WeatherForecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}